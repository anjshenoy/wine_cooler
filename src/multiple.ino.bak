#include <OneWire.h>
#include <DallasTemperature.h>
#include "thermometer.h"

// Data wire is plugged into port 2 on the Arduino
#define ONE_WIRE_BUS 2

// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);

// arrays to hold device addresses
uint8_t UPPER_THERMOMETER_ADDRESS[] = { 0x28, 0x00, 0xC8, 0xAB, 0x05, 0x00, 0x00, 0x0A };
uint8_t LOWER_THERMOMETER_ADDRESS[] = { 0x28, 0x51, 0x5C, 0xAB, 0x05, 0x00, 0x00, 0xBB };

Thermometer upperThermometer(sensors, UPPER_THERMOMETER_ADDRESS);
Thermometer lowerThermometer(sensors, LOWER_THERMOMETER_ADDRESS);
DeviceAddress insideThermometer, outsideThermometer;

void setup(void)
{
  // start serial port
  Serial.begin(115200);
  Serial.println("Dallas Temperature IC Control Library Demo");
  sensors.begin();
  upperThermometer.begin();
  lowerThermometer.begin();

  // report parasite power requirements
  Serial.print("Parasite power is: "); 
  //if (sensors.isParasitePowerMode()) Serial.println("ON");
  //else Serial.println("OFF");
  // Start up the library
  //if (!sensors.getAddress(insideThermometer, 0)) Serial.println("Unable to find address for Device 0"); 

  // show the addresses we found on the bus
  Serial.print("Device 0 (inside thermometer) Address: ");
  printAddress(insideThermometer);
  Serial.println();
  //if (!sensors.getAddress(outsideThermometer, 1)) Serial.println("Unable to find address for Device 1"); 

  // show the addresses we found on the bus
  Serial.println();
  Serial.print("Device 1 (outside thermometer) Address: ");
  printAddress(outsideThermometer);
  Serial.println();
}

void loop(void)
{
  // call sensors.requestTemperatures() to issue a global temperature 
  // request to all devices on the bus
  Serial.print("Requesting temperatures...");
  sensors.requestTemperatures(); // Send the command to get temperatures
  Serial.println("DONE");

  Serial.print("Temperature for inside thermometer device 0 (index 0) is: ");
  Serial.println(sensors.getTempF(insideThermometer));
  Serial.print("Temperature for outside thermometer device 1 (index 1) is: ");
  Serial.println(sensors.getTempF(outsideThermometer));

  Serial.println(upperThermometer.getTemperature());
  Serial.println(lowerThermometer.getTemperature());
  delay(1000);
}

// function to print a device address
void printAddress(DeviceAddress deviceAddress)
{
  for (uint8_t i = 0; i < 8; i++)
  {
    // zero pad the address if necessary
    if (deviceAddress[i] < 16) Serial.print("0");
    Serial.print(deviceAddress[i], HEX);
  }
}
